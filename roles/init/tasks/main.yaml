---
- name: developer subscription
  redhat_subscription:
    state: present
    username: "{{ rhs_user }}"
    password: "{{ rhs_pass }}"
    auto_attach: true
  when: (rhs_user is defined) and (rhs_user|length > 0) and (rhs_pass is defined) and (rhs_pass|length > 0)
  tags: subscription,clusterup

- name: disable all RHSM repositories
  rhsm_repository:
    name: '*'
    state: disabled
  tags: subscription,clusterup

- name: enable needed repositories
  rhsm_repository:
    name: "{{ item }}"
    state: enabled
  with_items: "['rhel-7-server-rpms', 'rhel-7-server-extras-rpms', 'rhel-7-server-ansible-2.6-rpms']"
  tags: subscription,clusterup

- name: be sure packages are installed
  yum:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - docker
    - chrony
  tags: ntp,docker,packages

- name: configure chrony
  template:
    src: templates/chrony.j2
    dest: /etc/chrony.conf
  notify:
  - restart chrony
  tags: ntp,packages

- name: add insecure registry to docker
  template:
    src: templates/docker.j2
    dest: /etc/sysconfig/docker
  notify:
  - restart docker
  tags: docker,packages

- name: flush handlers
  meta: flush_handlers

- name: enable and start docker service
  service:
    name: docker
    enabled: yes
    state: started
  tags: docker,packages

- name: log into redhat registry and force re-authorization
  shell: |
    docker login -u {{ rhs_user }} -p {{ rhs_pass }} registry.redhat.io
  tags: docker,packages,clusterup

- name: create temporary directory
  tempfile:
    state: directory
  register: builddir_1
  tags: download

- name: download oc client
  get_url:
    url: https://mirror.openshift.com/pub/openshift-v3/clients/{{ openshift_version }}/linux/oc.tar.gz
    dest: "{{ builddir_1['path'] }}/oc.tar.gz"
    mode: '0664'
  tags: download

- name: extract oc client
  unarchive:
    src: "{{ builddir_1['path'] }}/oc.tar.gz"
    dest: /usr/local/sbin
  tags: download

- name: remove temporary directory
  file:
    path: "{{ builddir_1['path'] }}"
    state: absent
  tags: download

- name: check if rc-local.service is updated
  copy:
    src: files/rc-local.service
    dest: /etc/systemd/system/rc-local.service
  tags: systemdservices,rclocal

- name: check if rc.local script is updated
  template:
    src: templates/rc.local.j2
    dest: /etc/rc.d/rc.local
    mode: 0755
  tags: systemdservices,rclocal

- name: check if ovfconf.service is upated
  copy:
    src: files/ovfconf.service
    dest: /etc/systemd/system/ovfconf.service
  tags: systemdservices,ovfconf

- name: check if ovfconf script is updated
  copy:
    src: files/ovfconf
    dest: /usr/local/sbin/ovfconf
    mode: 0755
  tags: systemdservices,ovfconf
